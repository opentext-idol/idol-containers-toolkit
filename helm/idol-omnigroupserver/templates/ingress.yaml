# BEGIN COPYRIGHT NOTICE
# Copyright 2023 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE
{{- if .Values.enableIngress }}
{{- /*
 nginx ingress needs path capture to achieve prefix type routing
*/}}
{{- $pathSuffix := "" }}
{{- $pathType := "Prefix" }}
{{- if eq .Values.ingressType "nginx" }}
{{- $pathSuffix = "(.*)"}}
{{- $pathType = "ImplementationSpecific" }}
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name | quote }}
  labels: {{- include "idol-library.labels" . | nindent 4 }}
  annotations:
{{- if eq .Values.ingressType "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{- else if eq .Values.ingressType "haproxy" }}
    haproxy.router.openshift.io/rewrite-target: / 
{{- end }}
spec:
{{- if .Values.ingressClassName }}
  ingressClassName: {{ .Values.ingressClassName }}
{{- end }}
  rules:
  - http:
      paths:
      - path: {{ print "/omnigroupserver/" $pathSuffix }}
        pathType: {{ $pathType }}
        backend:
          service:
            name:  {{ .Values.name | quote }}
            port:
              name: aci-port
{{- if .Values.ingressHost }}
    host: {{ .Values.ingressHost }}
{{- end }}
{{- end }}