# BEGIN COPYRIGHT NOTICE
# Copyright 2023 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE
{{- range $nifiClusterItem := .Values.nifiClusters }}
{{ $nifiCluster := (include "idolnifi.clusterItem" (dict "root" $ "item" $nifiClusterItem) | fromYaml) }}
{{- if $nifiCluster.ingress.enabled -}}
{{- /*
 nginx ingress needs path capture to achieve prefix type routing
*/}}
{{- $pathSuffix := "" }}
{{- $pathType := "Prefix" }}
{{- if eq $.Values.ingressType "nginx" }}
{{- $pathSuffix = "(.*)"}}
{{- $pathType = "ImplementationSpecific" }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $nifiCluster.clusterId }}-aci
  labels: {{- include "idol-library.labels" (dict "root" $ "component" $nifiCluster) | nindent 4 -}}
  annotations:
{{- if eq $.Values.ingressType "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: {{ $.Values.ingressProxyBodySize }}
{{- else if eq $.Values.ingressType "haproxy" }}
    haproxy.router.openshift.io/rewrite-target: / 
    haproxy.router.openshift.io/proxy-body-size: {{ $.Values.ingressProxyBodySize }}
{{- end }}
spec:
{{- if $.Values.ingressClassName }}
  ingressClassName: {{ $.Values.ingressClassName }}
{{- end }}
{{- if $nifiCluster.ingress.aciTLS.secretName }}
  tls:
  - hosts:
      - {{ $nifiCluster.ingress.host }}
    secretName: {{ $nifiCluster.ingress.aciTLS.secretName }}
{{- end }}
  rules:
  - http:
      paths:
      - path: {{ print (len $.Values.nifiClusters | plural "" (print "/" $nifiCluster.clusterId)) "/connector-aci/" $pathSuffix | quote }}
        pathType: {{ $pathType }}
        backend:
          service:
            name: {{ $nifiCluster.clusterId }}
            port:
              name: connector-aci
{{- if $nifiCluster.ingress.aciHost }}
    host: {{ $nifiCluster.ingress.aciHost | quote }}
{{- end }}
{{ if $nifiCluster.ingress.aciTLS.secretName -}}
---
{{ include "idol-library.ingress.secret" (dict "tls" $nifiCluster.ingress.aciTLS) -}}
{{- end -}}
{{- end -}}
{{- end -}}