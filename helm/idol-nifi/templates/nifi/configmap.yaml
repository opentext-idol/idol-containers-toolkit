# BEGIN COPYRIGHT NOTICE
# Copyright 2023 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE
{{- range $nifiClusterItem := .Values.nifiClusters }}
{{- $nifiCluster := merge $nifiClusterItem $.Values.nifi (dict "clusterId" $.Values.name) }}
{{- $flows := (empty $nifiCluster.flowfile | ternary 
                (fromYamlArray (include "idol-library.util.range_array_or_map_values" (dict "root" . "vals" $nifiCluster.flows)))
                (list ( dict "file" $nifiCluster.flowfile "bucket" "default-bucket" "import" true ))
                ) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $nifiCluster.clusterId }}-env
  labels: {{- include "idol-library.labels" (dict "root" $ "component" $nifiCluster) | nindent 4 -}}
    app: {{ $nifiCluster.clusterId }}
data:
  JAVA_OPTS: "-XX:UseAVX=0 -Djavax.net.debug=ssl,handshake"
  KEYSTORE_PATH: "${NIFI_HOME}/keytool/keystore.p12"
  KEYSTORE_TYPE: "PKCS12"
  MALLOC_ARENA_MAX: {{ $nifiCluster.mallocArenaMax | quote }}
  NIFI_ANALYTICS_PREDICT_ENABLED: "true"
  NIFI_CLUSTER_IS_NODE: "true"
  NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT: "1 min"
  NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE: "25"
  NIFI_CLUSTER_NODE_LOAD_BALANCE_PORT: "6342"
  NIFI_CLUSTER_NODE_PROTOCOL_MAX_THREADS: "20"
  NIFI_CLUSTER_NODE_PROTOCOL_PORT: "11443"
  NIFI_CLUSTER_NODE_PROTOCOL_THREADS: "10"
  NIFI_CLUSTER_NODE_READ_TIMEOUT: "1 min"
  NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL: "5 sec"
  NIFI_CLUSTER_PROTOCOL_IS_SECURE: "true"
  NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED: "false"
  NIFI_ELECTION_MAX_CANDIDATES: "1"
  NIFI_ELECTION_MAX_WAIT: "2 min"
  NIFI_JVM_HEAP_INIT: {{ printf "%dm" ( mulf $nifiCluster.resources.requests.memoryMi $nifiCluster.jvmMemoryRatio | int ) }}
  NIFI_JVM_HEAP_MAX: {{ printf "%dm" ( mulf $nifiCluster.resources.limits.memoryMi $nifiCluster.jvmMemoryRatio | int ) }}
  NIFI_SECURITY_AUTORELOAD_ENABLED: "true"
  NIFI_SECURITY_AUTORELOAD_INTERVAL: "5 min"
  NIFI_SECURITY_NEEDCLIENTAUTH: "true"
  NIFI_WEB_HTTP_PORT: "8080"
  NIFI_WEB_HTTPS_PORT: "8443"
{{- if $nifiCluster.ingress.proxyPath }}
  NIFI_WEB_PROXY_CONTEXT_PATH: {{ $nifiCluster.ingress.proxyPath | quote }}
{{- else if gt (len $.Values.nifiClusters) 1 }}
  NIFI_WEB_PROXY_CONTEXT_PATH: "/{{ $nifiCluster.clusterId }}"
{{- end }}
{{- if $nifiCluster.ingress.proxyHost }}
  NIFI_WEB_PROXY_HOST: {{ $nifiCluster.ingress.proxyHost | quote }}
{{- end }}
  NIFI_ZK_CONNECT_STRING: "{{ $nifiCluster.clusterId }}-zk:2181"
  NIFI_ZOOKEEPER_CONNECT_STRING: "{{ $nifiCluster.clusterId }}-zk:2181"
  NIFI_REGISTRY_HOSTS: "{{ coalesce $nifiCluster.registryHost (print $.Values.name "-reg")  }}"
  TRUSTSTORE_PATH: "${NIFI_HOME}/keytool/truststore.jks"
  TRUSTSTORE_TYPE: "jks"
  IDOL_NIFI_THREADS: "{{ $nifiCluster.threadCount }}"
  IDOL_NIFI_SERVICE_START_RETRIES: "{{ $nifiCluster.serviceStartRetries }}"
  IDOL_NIFI_FLOW_COUNT: "{{ $flows | len }}"
{{- /* Maintains backwards compatibility for the old nifi.flowfile by using that if explicitly set, else using the newer nifi.flows */}}
{{- range $i,$flow := $flows }}
  IDOL_NIFI_FLOW_FILE_{{ $i }}: {{ $flow.file | default "" | quote }}
  IDOL_NIFI_FLOW_NAME_{{ $i }}: {{ $flow.name | default "" | quote }}
  IDOL_NIFI_FLOW_VERSION_{{ $i }}: {{ $flow.version | default "" | quote }}
  IDOL_NIFI_FLOW_BUCKET_{{ $i }}: {{ $flow.bucket | quote }}
  IDOL_NIFI_FLOW_IMPORT_{{ $i }}: {{ hasKey $flow "import" | ternary $flow.import "true" | quote }}
{{- end }}
{{- end -}}
