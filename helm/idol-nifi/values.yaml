# BEGIN COPYRIGHT NOTICE
# Copyright 2023-2024 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE

global:
  # -- Global override value for idolImage.registry
  # @section -- Globals
  idolImageRegistry: ""
  # -- Global override value for idolImage.version
  # @section -- Globals
  idolVersion: ""
  # -- Global secrets used to pull container images
  # @section -- Globals
  imagePullSecrets:
  - "dockerhub-secret"
  # -- Global override value for idolImage.imagePullPolicy, has no effect if it is empty or is removed
  # @section -- Globals
  imagePullPolicy: ""
  # -- Optional Secret containing OEM licensekey.dat and versionkey.dat files for licensing. 
  # Mounted at /nifi/licensekey.dat and /nifi/versionkey.dat
  # @section -- Globals
  idolOemLicenseSecret: ""

idolImage:
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  registry: "microfocusidolserver"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  version: "24.4"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  repo: "nifi-full"
  # -- used to determine whether to pull the specified image (see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  imagePullPolicy: "IfNotPresent"

# -- whether ports are configured to use TLS (https).
usingTLS: false

# name -- used to name statefulset, service, ingress
name: idol-nifi

# -- Additional annotations applied to statefulset (https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
annotations: {}

# -- Additional labels applied to objects (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
labels: {}

# -- Optional configMap name holding extra environnment variables for container
envConfigMap: ""

# -- Additional PodSpec Volume (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes)
additionalVolumes: []

# -- Additional PodSpec VolumeMount (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-1)
additionalVolumeMounts: []

# ingressClassName -- Optional, https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource, applied to all ingress objects
ingressClassName: ""

# ingressBasicAuthData -- base64 encoded htpasswd https://httpd.apache.org/docs/2.4/misc/password_encryptions.html. Default is admin/admin
ingressBasicAuthData: YWRtaW46JGFwcjEkSDY1dnBkTU8kMXAxOGMxN3BuZVFUT2ZjVC9TZkZzMQo=

# ingressProxyBodySize -- the maximum allowed size of the client request body, defining
# the maximum size of requests that can be made to IDOL components within the installation, e.g.
# the amount of data sent in DREADDDATA index commands.
# The value should be an nginx "size" value.
# See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size for the documentation of the
# corresponding nginx configuration parameter.
ingressProxyBodySize: 2048m

# ingressType -- setup ingress for that controller type.
# Valid values are nginx, haproxy (used by OpenShift) or custom
ingressType: nginx

# indexserviceName -- the hostname of the indexing IDOL component
indexserviceName: "idol-index-service"

# indexserviceACIPort -- the ACI port of the indexing IDOL component
indexserviceACIPort: "9070"

# podSecurityContext -- pod security context definition 
# See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  enabled: true
  runAsGroup: 1000
  runAsUser: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# containerSecurityContext -- container security context definition 
# See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  privileged: false
  capabilities:
    drop:
      - ALL

# -- Optional serviceAccountName for the pods (https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account)
serviceAccountName: ""

nifi:
  autoScaling:
    # -- deploy a horizontal pod autoscaler for the nifi statefulset
    enabled: true
    # -- the minimum size of the nifi statefulset
    minReplicas: 1
    # -- the maximum size of the nifi statefulset
    maxReplicas: 8
    # -- no. of seconds a limit must be exceed before scaling the nifi statefulset
    stabilizationWindowSeconds: 300
    # -- one or more metrics controlling the horizontal pod autoscaler (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v2/#HorizontalPodAutoscalerSpec)
    # @default -- See below
    metrics:
    # -- Scale up if the average queue utilization per nifi node is greater than 25%
    - type: Pods
      pods:
        metric:
          name: nifi_percent_used_count_avg
        target:
          type: AverageValue
          averageValue: 25
    # -- Scale up if there are more than 20000 queued items per nifi node
    - type: Pods
      pods:
        metric:
          name: nifi_amount_items_queued_total
        target:
          type: AverageValue
          averageValue: 20000
  # -- https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
  resources:
    requests:
      cpu: 2000m
      # -- memory requested in mebibytes (value used in jvm memory calculation)
      memoryMi: 4096
    limits:
      cpu: 4000m
      # -- memory limit in mebibytes (value used in jvm memory calculation)
      memoryMi: 10240
  
  dataVolume:
    # -- Name of the storage class used to provision a PersistentVolume
    # for each NiFi instance.
    # The associated PVCs are named statedata-{name}-{pod number}
    storageClass: "idol-nifi-storage-class"
    # -- Size of the PersistentVolumeClaim that is created
    # for each NiFi instance. The Kubernetes cluster will need to provide
    # enough PersistentVolumes to satisify the claims made for the desired number
    # of NiFi instances. The size chosen here provides a hard limit on the size
    # of the NiFi data storage in each NiFi instance.
    volumeSize: 16Gi
  
  # -- What proportion of the pod memory to allocate for JVM usage
  jvmMemoryRatio: 0.5

  # -- The flow definitions to import into NiFi registry.
  # Specify the file, registry bucket name (will be created if not found), and whether to import the flow as a process group into NiFi,
  # or specify the name, bucket name (and optionally version, latest will be used if not specified) of an existing flow in NiFi Registry.
  # Customized flows can be added via a custom NiFi image or mounted into the pod (see `additionalVolumes` and `additionalVolumeMounts`)
  flows:
  - name: "Basic IDOL"
    bucket: "default-bucket"
    version: ""

  ingress:
    # -- whether to deploy ingress for nifi
    enabled: true
    # -- optional ingress annotations
    annotations: {}
    # -- optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    host: ""
    # -- optional nifi.web.proxy.context.path value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#web-properties)
    proxyPath: ""
    # -- optional nifi.web.proxy.host value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#web-properties)
    proxyHost: ""
    # -- optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    aciHost: ""
    # -- optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    metricsHost: ""
    
    # -- Whether ingress uses TLS. You must set an ingress host to use this. 
    # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    tls:
    # -- The name of the secret for ingress TLS. Leave empty if not using TLS. 
    # If specified then either this secret must already exist, or crt and key values must be provided and secret will be created.. 
      secretName: ""
      # -- Certificate data value to generate tls Secret (should be base64 encoded)
      crt: ""
      # -- Private key data value to generate tls Secret (should be base64 encoded)
      key: ""
    
    # -- Whether aci ingress uses TLS. You must set an ingress aciHost to use this. 
    # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    aciTLS:
      # -- The name of the secret for aci ingress tls. Leave empty if not using TLS.
      secretName: ""
      # -- Certificate data value to generate tls Secret (should be base64 encoded)
      crt: ""
      # -- Private key data value to generate tls Secret (should be base64 encoded)
      key: ""
      
    # -- Whether metrics ingress uses TLS. You must set an ingress metricsHost to use this. 
    # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    metricsTLS:
      # -- The name of the secret for metrics ingress tls. Leave empty if not using TLS.
      secretName: ""
      # -- Certificate data value to generate tls Secret (should be base64 encoded)
      crt: ""
      # -- Private key data value to generate tls Secret (should be base64 encoded)
      key: ""

  # -- optional nifi.security.keystorePasswd value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#security_properties)
  # Setting this value is recommended. If it is not set, it will default to a generated value
  keystorePassword: ""
  # -- optional nifi.security.truststorePasswd value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#security_properties)
  # Setting this value is recommended. If it is not set, it will default to a generated value
  truststorePassword: ""
  # -- optional nifi.sensitive.props.key value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#nifi_sensitive_props_key)
  # Setting this value is recommended. If it is not set, it will default to a generated value
  sensitivePropsKey: ""
  # -- optional hostname of an existing nifi registry instance.
  # Defaults to the created registry instance when nifiRegistry.enabled=true
  registryHost: ""
  # -- number of seconds to allow for prestart scripts (optionally mounted to /opt/nifi/nifi-current/prestart_scripts/) to run.
  allowedStartupSeconds: 60

  service:
    # -- mapping of additional ports to expose on the nifi service (e.g. if flow includes a HandleHttpRequest processor).
    # Can minimally specify as `--set nifi.service.additionalPorts.{name}.port=12345`
    additionalPorts: {}
      # detailedFlowListenerExample:
      #   name: flowListener
      #   protocol: TCP
      #   port: 13000
      #   targetPort: 13000
      # minimalFlowListenerExample:
      #   port: 14000

  # -- Maximum timer driven thread count.
  threadCount: 10

# -- nifi cluster instances. Each cluster instance inherits values from the nifi section.
# When more than one cluster is specified, setting a clusterId is required
nifiClusters:
 - {}

nifiRegistry:
  # -- whether to deploy a nifi registry instance
  enabled: true
  # -- nifi-registry image to use
  image: docker.io/apache/nifi-registry:1.23.0
  ingress:
    # nifiRegistry.ingress.enabled -- whether to deploy ingress for nifi registry
    enabled: true
    # nifiRegistry.ingress.annotations -- optional ingress annotations
    annotations: {}
    # nifiRegistry.ingress.host -- optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    host: ""

    # -- Whether ingress uses TLS. You must set an ingress host to use this. 
    # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    tls:
      # -- The name of the secret for ingress TLS. Leave empty if not using TLS. 
      # If specified then either this secret must already exist, or crt and key values must be provided and secret will be created.
      secretName: ""
      # -- Certificate data value to generate tls Secret (should be base64 encoded)
      crt: ""
      # -- Private key data value to generate tls Secret (should be base64 encoded)
      key: ""
  
  # nifiRegistry.resources -- https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
    limits: 
      cpu: 1000m
      memory: 1Gi

  dataVolume:
    # -- Name of the storage class used to provision a PersistentVolume
    # for the NiFi Registry instance.
    # The associated PVCs are named statedata-{name}-reg-{pod number}
    storageClass: "idol-nifi-storage-class"
    # -- Size of the PersistentVolumeClaim that is created
    # for the NiFi Registry instance. The size chosen here provides a hard limit on the size
    # of the NiFi Registry data storage in the NiFi Registry instance.
    volumeSize: 2Gi

  # -- Buckets to create. Specify the bucket name, and a list of flow files to populate the bucket with.
  # Customized flows can be added via a custom NiFi Registry image or mounted into the pod (see `additionalVolumes` and `additionalVolumeMounts`)
  buckets:
  - name: "default-bucket"
    flowfiles:
    - /scripts/flow-basic-idol.json

zookeeper:
  # -- zookeeper image to use
  image: docker.io/zookeeper:3.8
  # zookeeper.resources -- https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
  resources:
    requests:
      cpu: 200m
      memory: 500Mi
    limits:
      cpu: 200m
      memory: 500Mi

# sub-chart values
idol-licenseserver:
  # idol-licenseserver.enabled -- whether to deploy an IDOL LicenseServer service abstraction
  enabled: false
  # idol-licenseserver.licenseServerService -- the hostname of the IDOL LicenseServer (or abstraction)
  licenseServerService: "idol-licenseserver"
  # idol-licenseserver.licenseServerPort -- the ACI port of the IDOL LicenseServer (or abstraction)
  licenseServerPort: "20000"

metrics-server:
  # -- whether to deploy a metrics server instance
  enabled: true
  args:
    - "--kubelet-insecure-tls"

# -- `prometheus` sub-chart configuration
# Required for auto-scaling. 
# See https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus
# @default -- Default configuration to support `idol-nifi` autoscaling. See values.yaml for details.
prometheus:
  enabled: true
  server:
    prefixURL: /prometheus
    baseURL: /prometheus
    ingress:
      enabled: true
      hosts:
        - ""
      pathType: Prefix
      path: /prometheus
    global:
      scrape_interval: 15s
  alertmanager:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  kube-state-metrics:
    enabled: false

# -- `prometheus-adapter` sub-chart configuration
# Required for auto-scaling. 
# See https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-adapter
# @default -- Default configuration to support `idol-nifi` autoscaling. See values.yaml for details.
prometheus-adapter:
  enabled: true
  metricsRelistInterval: 30s
  prometheus:
    url: http://{{ .Release.Name }}-prometheus-server
    port: 80
    path: "/prometheus"
  rules:
    custom:
    - seriesQuery: '{__name__="nifi_amount_items_queued"}'
      resources:
        template: <<.Resource>>
      name:
        matches: ".*"
        as: "nifi_amount_items_queued_total"
      metricsQuery: nifi_amount_items_queued{component_type="RootProcessGroup"}
    - seriesQuery: '{__name__="nifi_amount_items_queued"}'
      resources:
        template: <<.Resource>>
      name:
        matches: ".*"
        as: "nifi_amount_items_queued_avg"
      metricsQuery: 'avg(nifi_amount_items_queued{component_type="Connection"}) by (pod,namespace)'
    - seriesQuery: '{__name__="nifi_percent_used_count"}'
      resources:
        template: <<.Resource>>
      name:
        matches: ".*"
        as: "nifi_percent_used_count_max"
      metricsQuery: 'max(nifi_percent_used_count{component_type="Connection"}) by (pod,namespace)'
    - seriesQuery: '{__name__="nifi_percent_used_count"}'
      resources:
        template: <<.Resource>>
      name:
        matches: ".*"
        as: "nifi_percent_used_count_avg"
      metricsQuery: 'avg(nifi_percent_used_count{component_type="Connection"}) by (pod,namespace)'

# -- `postgresql` sub-chart configuration
# Required for shared state data storage across the nifi cluster.
# See https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha
# @default -- Default configuration to support shared state data. See values.yaml for details.
postgresql:
  # -- whether to deploy the postgresql subchart
  enabled: true
  pgpool:
    adminUsername: pgpool_admin
    adminPassword: pgpool_admin
  postgresql:
    database: nifi-statedata
    username: postgres
    password: postgres
    repmgrUsername: postgres_repmgr
    repmgrPassword: postgres_repmgr
    replicaCount: 1
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits: 
        cpu: 1000m
        memory: 1Gi
    extraVolumes:
    - name: dshm
      emptyDir:
        medium: Memory
        sizeLimit: 256Mi
    extraVolumeMounts:
    - name: dshm
      mountPath: /dev/shm
  persistence:
    storageClass: "idol-nifi-storage-class"
    size: 8Gi
  metrics:
    enabled: false