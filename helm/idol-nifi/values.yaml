# idolImageRegistry - used to construct container image name: <idolImageRegistry>/<nifiImage>:<idolVersion>
idolImageRegistry: microfocusidolserver
# idolVersion - used to construct container image name: <idolImageRegistry>/<nifiImage>:<idolVersion>
idolVersion: "23.4"

# imagePullSecrets - secrets used to pull container images
imagePullSecrets:
- "dockerhub-secret"

# ingressClassName - Optional, https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource, applied to all ingress objects
ingressClassName: ""

# ingressBasicAuthData - base64 encoded htpasswd https://httpd.apache.org/docs/2.4/misc/password_encryptions.html. Default is admin/admin
ingressBasicAuthData: YWRtaW46JGFwcjEkSDY1dnBkTU8kMXAxOGMxN3BuZVFUT2ZjVC9TZkZzMQo=

# ingressProxyBodySize - the maximum allowed size of the client request body, defining
# the maximum size of requests that can be made to IDOL components within the installation, e.g.
# the amount of data sent in DREADDDATA index commands.
# The value should be an nginx "size" value.
# See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size for the documentation of the
# corresponding nginx configuration parameter.
ingressProxyBodySize: 2048m

ingressType: nginx

nifi:
  autoScaling:
    # autoScaling.enabled - deploy a horizontal pod autoscaler for the nifi statefulset
    enabled: true
    # autoScaling.minReplicas - the minimum size of the nifi statefulset
    minReplicas: 1
    # autoScaling.maxReplicas - the maximum size of the nifi statefulset
    maxReplicas: 8
    # metrics - one or more metrics controlling the horizontal pod autoscaler (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v2/#HorizontalPodAutoscalerSpec)
    metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 90
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90

  # resources - https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
  resources:
    requests:
      cpu: 400m
      # nifi.resources.requests.memoryMi - memory requested in mebibytes (value used in jvm memory calculation)
      memoryMi: 3072
    limits:
      cpu: 400m
      # nifi.resources.limits.memoryMi - memory limit in mebibytes (value used in jvm memory calculation)
      memoryMi: 4096
  
  # jvmMemoryRatio - What proportion of the pod memory to allocate for JVM usage
  jvmMemoryRatio: 0.9

  # nifiImage - used to construct container image name: <idolImageRegistry>/<nifi.imageName>:<idolVersion>
  imageName: nifi-full

  ingress:
    # nifi.ingress.enabled - whether to deploy ingress for nifi
    enabled: true
    # nifi.ingress.annotations - optional ingress annotations
    annotations: {}
    # nifi.ingress.host - optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    host: ""
    # nifi.ingress.proxyHost - optional nifi.web.proxy.context.path value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#web-properties)
    proxyPath: ""
    # nifi.ingress.proxyHost - optional nifi.web.proxy.host value (see https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#web-properties)
    proxyHost: ""
    # nifi.ingress.aciHost - optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    aciHost: ""

nifiRegistry:
  ingress:
    # nifiRegistry.ingress.enabled - whether to deploy ingress for nifi
    enabled: true
    # nifiRegistry.ingress.annotations - optional ingress annotations
    annotations: {}
    # nifiRegistry.ingress.host - optional ingress host https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    host: ""

# sub-chart values
idol-licenseserver:
  enabled: false