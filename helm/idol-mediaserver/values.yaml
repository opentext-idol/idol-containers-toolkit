# BEGIN COPYRIGHT NOTICE
# Copyright 2023-2025 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE

# As per https://helm.sh/docs/topics/charts/#the-chart-file-structure
# this values.yaml file contains the default configuration values for this chart.
# These default values can be overridden by using the --values or --set flags on the `helm install`
# command: see https://helm.sh/docs/helm/helm_install/

global:
  # -- Global override value for idolImage.registry
  # @section -- Globals
  idolImageRegistry: ""
  # -- Global override value for idolImage.version
  # @section -- Globals
  idolVersion: ""
  # -- Global secrets used to pull container images
  # @section -- Globals
  imagePullSecrets:
  - "dockerhub-secret"
  # -- Global override value for idolImage.imagePullPolicy, has no effect if it is empty or is removed
  # @section -- Globals
  imagePullPolicy: ""
  # -- Optional Secret containing OEM licensekey.dat and versionkey.dat files for licensing
  # @section -- Globals
  idolOemLicenseSecret: ""

idolImage:
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  registry: "microfocusidolserver"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  version: "25.1"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  repo: "mediaserver-english"
  # -- used to determine whether to pull the specified image (see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  imagePullPolicy: "IfNotPresent"

# -- Additional annotations applied to deployment/statefulset (https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
annotations: {}

# -- Additional labels applied to all objects (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
labels: {}

# licenseServerHostname -- the hostname of the IDOL LicenseServer (or abstraction)
licenseServerHostname: "idol-licenseserver"
# licenseServerPort -- the ACI port of the IDOL LicenseServer (or abstraction)
licenseServerPort: "20000"

# -- if specified, mounted at /etc/config/idol and expected to provide mediaserver.cfg
existingConfigMap: ""

# -- Additional PodSpec Volume(s) (see <https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes>)
# Can be dict of (name, Volume), or list of (Volume). dict form allows for merging definitions from multiple values files.
additionalVolumes: null

# -- Additional PodSpec VolumeMount(s) (see <https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-1>)
# Can be dict of (name, VolumeMount), or list of (VolumeMount). dict form allows for merging definitions from multiple values files.
additionalVolumeMounts: null


# -- Optional configMap name holding extra environnment variables for container
envConfigMap: ""

# -- whether aci/service/index ports are configured to use TLS (https).
# If configuring for TLS, then consider setting IDOL_SSL_COMPONENT_CERT_PATH and IDOL_SSL_COMPONENT_KEY_PATH in envConfigMap
# to provide required TLS certificates
usingTLS: false

# -- Optional PodSecurityContext (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#podsecuritycontext-v1-core)
podSecurityContext:
  # -- enable PodSecurityContext. Setting to false omits.
  enabled: false
  fsGroup: 0
  runAsUser: 1000
  runAsGroup: 0

# -- Optional SecurityContext for container (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#securitycontext-v1-core)
containerSecurityContext:
  # -- enable SecurityContext for container. Setting to false omits.
  enabled: false
  privileged: false
  runAsNonRoot: true

# -- Optional resources for container (see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers)
resources:
  # -- enable resources for container. Setting to false omits.
  enabled: false
  limits:
    cpu: 1000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 4Gi

# -- number of replica pods for this container (defaults to 1)
replicas: 1

# -- Optional serviceAccountName for the pods (https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account)
serviceAccountName: ""

# -- The maximum number of Process actions that can be run simultaneously
# Increase this value to match available Channels, if you increase the Channels values
# See MediaServer documentation for more information about Process actions
processMaximumThreads: 1

# -- Set the following four values to specify exact quantities of license channels to reserve
# Your license must be able to cover the number of channels you specify here
# See MediaServer documentation for more information about channels

# -- Allocate one channel for each concurrent process action that includes audio processing
# Audio channels are used for each of the following processes:
#   Audio categorization
#   Audio matching
#   Language identification
#   Speaker identification
#   Speech-to-text
#   All video management features
audioChannels: 1

# -- Allocate one channel for each analysis task, multiplied by the number of concurrent process actions
# Surveillance channels are used for each of the following processes:
#  Face detection
#  Number plate recognition (ANPR)
#  Object class recognition (but only with certain pre-trained recognizers).
#  Scene analysis
#  Text detection
#  All video management features
surveillanceChannels: 1

# -- Allocate one channel for each concurrent process action that includes any visual analytics.
# Visual channels are used for each of the following processes:
#  Ingesting records from another Media Server for further processing
#  All analysis operations except audio processing
#  Face recognition on large databases (maximum 250,000 faces, every additional 250,000 faces requires an additional visual channel)
#  All surveillance and video management features
visualChannels: 1

# -- Allocate one video management channel for each concurrent process action that does not require an audio, surveillance, or visual channel
# These channels will be used for the following:
#  Ingest (apart from the Receive ingest engine, which requires a visual channel)
#  Analysis:
#   Keyframe
#   News segmentation
#   Text segmentation
#  Encoding
#  Event stream processing
#  Transformation
#  Output
videoManagementChannels: 1

# -- Which modules to enable
# Enable only the modules you want to use, to reduce memory usage and improve startup speed
modules:
- "ocr"
- "speechtotext"

##### INGRESS VARIABLES #####

ingress:
  # -- Create ingress resource
  # @section -- Ingress
  enabled: true

  # -- Ingress controller type to setup for.
  # Valid values are nginx or haproxy (used by OpenShift)
  # @section -- Ingress
  type: nginx

  # -- Optional parameter to override the default ingress class
  # @section -- Ingress
  className: ""

  # -- Optional host (see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
  # For an OpenShift environment this is required (see https://docs.openshift.com/container-platform/4.11/networking/routes/route-configuration.html#nw-ingress-creating-a-route-via-an-ingress_route-configuration)
  # @section -- Ingress
  host: ""

  # -- Ingress controller path for ACI connections.
  # @section -- Ingress
  path: "/mediaserver/"

  # -- Ingress controller path for service connections.
  # @section -- Ingress
  servicePath: "/mediaserver/service/"

  # -- Maximum allowed size of the client request body, defining
  # the maximum size of requests that can be made to IDOL components within the installation, e.g.
  # the amount of data sent in DREADDDATA index commands.
  # The value should be an nginx "size" value.
  # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size for the documentation of the
  # corresponding nginx configuration parameter.
  # @section -- Ingress
  proxyBodySize: 2048m

  # -- Ingress controller specific annotations
  # Some annotations are added automatically based on ingress.type and other values, but can 
  # be overridden/augmented here
  # e.g. https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations
  # @section -- Ingress
  annotations: {}

  # -- Whether ingress uses TLS. You must set an ingress host to use this. 
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls 
  # @section -- Ingress
  tls:
    # -- The name of the secret for ingress TLS. Leave empty if not using TLS. 
    # If specified then either this secret must already exist, or crt and key values must be provided and secret will be created.. 
    # @section -- Ingress
    secretName: ""

    # -- Certificate data value to generate tls Secret (should be base64 encoded)
    # @section -- Ingress
    crt: ""

    # -- Private key data value to generate tls Secret (should be base64 encoded)
    # @section -- Ingress
    key: ""

##### INTERNAL VARIABLES #####
# name -- used to name deployment, service, ingress
name: "idol-mediaserver"

# -- Expected working directory for the container.
# Should only need to change this for a heavily customized image.
workingDir: "/mediaserver"

# aciPort -- port service will serve ACI connections on
aciPort: "14000"
# servicePort -- port service will serve service connections on
servicePort: "14001"
# livenessProbe -- container livenessProbe settings
livenessProbe:
  initialDelaySeconds: 30


