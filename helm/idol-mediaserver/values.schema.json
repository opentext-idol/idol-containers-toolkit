{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$defs": {
        "base":{
            "type": "object",
            "properties": {
                "global": {
                    "$ref": "#/$defs/global"
                },
                "idol-library": {
                    "type": "object",
                    "additionalProperties": true
                }
            },
            "required": [
                "global"
            ],
            "allOf":[
                {"$ref": "#/$defs/licensing"},
                {"$ref": "#/$defs/mediaserver"}
            ],
            "unevaluatedProperties": false
        },
        "port_number": {
            "type": "string",
            "pattern": "^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$"
        },
        "required_string":{
            "type": "string",
            "minLength": 1
        },
        "optional_object":{
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required":[
                "enabled"
            ]
        },
        "liveness_probe": {
            "type": "object",
            "properties": {
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "failureThreshold": {
                    "type": "integer"
                }
            }
        },
        "ingressCommon":{
            "type": "object",
            "properties":{
                "enabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": ["nginx","haproxy"]
                },
                "className": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/$defs/required_string"
                },
                "servicePath": {
                    "type": "string"
                },
                "proxyBodySize":{
                    "type":"string",
                    "pattern": "^\\d+(?:\\.\\d+)?(?:Ki|Mi|Gi|Ti|Pi|Ei|m|k|M|G|T|P|E)?$"
                },
                "annotations": {
                    "type": "object"
                },
                "tls": {
                    "$ref": "#/$defs/ingressTLS"
                }
            },
            "required":[
                "enabled",
                "type",
                "path",
                "tls"
            ]
        },
        "ingressTLS":{
            "type": "object",
            "properties":{
                "secretName": {
                    "type": "string"
                },
                "crt": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "required":[
                "secretName"
            ]
        },
        "server_modules": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "string",
                "enum": ["audiocategorize", "audiomatch", "barcode", "clusterspeech", "demographics", "facedetect", "facerecognize",
                         "facestate", "imageclassification", "imagecomparison", "imagehash", "languageid", "numberplate",
                         "objectclassrecognition", "objectrecognition", "ocr", "personanalysis", "speakerid", "speechtotext", "vehiclemodel",
                         "videomatch", "visualclustering"]
            }
        },
        "idolImage":{
            "type": "object",
            "properties":{
                "registry": {
                    "$ref": "#/$defs/required_string"
                },
                "version": {
                    "$ref": "#/$defs/required_string"
                },
                "repo": {
                    "$ref": "#/$defs/required_string"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "enum": ["Always", "IfNotPresent", "Never"]
                }
            },
            "required":[
                "registry",
                "version",
                "repo"
            ],
            "unevaluatedProperties": false
        },
        "global":{
            "type": "object",
            "properties":{
                "idolImageRegistry": {
                    "type": "string"
                },
                "idolVersion": {
                    "type": "string"
                },
                "imagePullSecrets": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/$defs/required_string"
                    }
                },
                "imagePullPolicy": {
                    "type": "string",
                    "enum": ["", "Always", "IfNotPresent", "Never"]
                },
                "idolOemLicenseSecret": {
                    "type": "string",
                    "description": "Optional Secret containing OEM licensekey.dat and versionkey.dat files for licensing."
                }
            },
            "required":[
                "imagePullSecrets"
            ]
        },
        "aciCommon":{
            "type": "object",
            "properties": {
                "idolImage": {
                    "$ref": "#/$defs/idolImage"
                },
                "existingConfigMap": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/$defs/required_string"
                },
                "aciPort": {
                    "$ref": "#/$defs/port_number"
                },
                "servicePort": {
                    "$ref": "#/$defs/port_number"
                },
                "livenessProbe": {
                    "$ref": "#/$defs/liveness_probe"
                },
                "additionalVolumes":{
                    "type": ["array", "object", "null"]
                },
                "additionalVolumeMounts":{
                   "type": ["array", "object", "null"]
                },
                "envConfigMap":{
                    "type": "string"
                },
                "usingTLS":{
                    "type": "boolean"
                },
                "containerSecurityContext":{
                    "$ref": "#/$defs/optional_object"
                },
                "podSecurityContext":{
                    "$ref": "#/$defs/optional_object"
                },
                "resources":{
                    "$ref": "#/$defs/optional_object"
                },
                "replicas": {
                    "type": "integer"
                },
                "labels": {
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "Additional labels applied to all objects (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)",
                    "type": [
                      "object",
                      "null"
                    ]
                },
                "annotations": {
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "Additional annotations applied to deployment/statefulset (https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)",
                    "type": [
                      "object",
                      "null"
                    ]
                },
                "serviceAccountName":{
                    "type": "string",
                    "description": "Optional serviceAccountName for the pods (https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account)"
                },
                "workingDir":{
                    "type": "string",
                    "description": "Expected working directory for the container. Should only need to change this for a heavily customized image."
                }
            },
            "required":[
                "idolImage",
                "ingress",
                "name",
                "aciPort",
                "servicePort",
                "usingTLS",
                "workingDir"
            ]
        },
        "licensing":{
            "type": "object",
            "properties":{
                "licenseServerHostname": {
                    "type": "string",
                    "format": "hostname"
                },
                "licenseServerPort": {
                    "$ref": "#/$defs/port_number"
                }
            },
            "required": ["licenseServerHostname","licenseServerPort"]
        },
        "mediaserver":{
            "type": "object",
            "properties":{
                "processMaximumThreads": {
                    "type": "integer"
                },
                "audioChannels": {
                    "type": "integer"
                },
                "surveillanceChannels": {
                    "type": "integer"
                },
                "videoManagementChannels": {
                    "type": "integer"
                },
                "visualChannels": {
                    "type": "integer"
                },
                "modules": {
                    "$ref": "#/$defs/server_modules"
                },
                "ingress": {
                    "type":"object",
                    "properties":{
                    },
                    "required":[
                    ],
                    "allOf":[
                        {"$ref":"#/$defs/ingressCommon"}
                    ],
                    "unevaluatedProperties": false
                }
            },
            "required": [
                "processMaximumThreads",
                "audioChannels",
                "surveillanceChannels",
                "videoManagementChannels",
                "visualChannels",
                "modules",
                "ingress"
            ],
            "allOf":[
                { "$ref": "#/$defs/aciCommon" }
            ]
        }
    },
    "type": "object",
    "$ref": "#/$defs/base",
    "unevaluatedProperties": false
}