# BEGIN COPYRIGHT NOTICE
# Copyright 2024 Open Text.
# 
# The only warranties for products and services of Open Text and its affiliates and licensors
# ("Open Text") are as may be set forth in the express warranty statements accompanying such
# products and services. Nothing herein should be construed as constituting an additional warranty.
# Open Text shall not be liable for technical or editorial errors or omissions contained herein.
# The information contained herein is subject to change without notice.
#
# END COPYRIGHT NOTICE

# As per https://helm.sh/docs/topics/charts/#the-chart-file-structure
# this values.yaml file contains the default configuration values for this chart.
# These default values can be overridden by using the --values or --set flags on the `helm install`
# command: see https://helm.sh/docs/helm/helm_install/

global:
  # -- Global override value for idolImage.registry
  # @section -- Globals
  idolImageRegistry: ""
  # -- Global override value for idolImage.version
  # @section -- Globals
  idolVersion: ""
  # -- Global secrets used to pull container images
  # @section -- Globals
  imagePullSecrets:
  - "dockerhub-secret"
  # -- Global override value for idolImage.imagePullPolicy, has no effect if it is empty or is removed
  # @section -- Globals
  imagePullPolicy: ""
  # -- Optional Secret containing OEM licensekey.dat and versionkey.dat files for licensing
  # @section -- Globals
  idolOemLicenseSecret: ""

idolImage:
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  registry: "microfocusidolserver"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  version: "24.4"
  # -- used to construct container image name: {idolImage.registry}/{idolImage.repo}:{idolImage.version}
  repo: "qms"
  # -- used to determine whether to pull the specified image (see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  imagePullPolicy: "IfNotPresent"

# -- Additional annotations applied to deployment/statefulset (https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
annotations: {}

# -- Additional labels applied to all objects (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
labels: {}

# licenseServerHostname -- the hostname of the IDOL LicenseServer (or abstraction)
licenseServerHostname: "idol-licenseserver"
# licenseServerPort -- the ACI port of the IDOL LicenseServer (or abstraction)
licenseServerPort: "20000"

# -- whether aci/service/index ports are configured to use TLS (https).
# If configuring for TLS, then consider setting IDOL_SSL_COMPONENT_CERT_PATH and IDOL_SSL_COMPONENT_KEY_PATH in envConfigMap
# to provide required TLS certificates
usingTLS: false

# -- if specified, mounted at /etc/config/idol and expected to provide qms.cfg
existingConfigMap: ""

# -- Additional PodSpec Volume (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes)
additionalVolumes: []

# -- Additional PodSpec VolumeMount (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-1)
additionalVolumeMounts: []

# -- Optional configMap name holding extra environnment variables for container
envConfigMap: ""

# -- Optional PodSecurityContext (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#podsecuritycontext-v1-core)
podSecurityContext:
  # -- enable PodSecurityContext. Setting to false omits.
  enabled: false
  fsGroup: 0
  runAsUser: 1000
  runAsGroup: 0

# -- Optional SecurityContext for container (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#securitycontext-v1-core)
containerSecurityContext:
  # -- enable SecurityContext for container. Setting to false omits.
  enabled: false

# -- Optional resources for container (see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers)
resources:
  # -- enable resources for container. Setting to false omits.
  enabled: false
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 1000m
    memory: 1Gi

# replicas -- number of replica pods for this container (defaults to 1)
replicas: 1

# -- Optional serviceAccountName for the pods (https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account)
serviceAccountName: ""

# -- Default configuration for [PromotionAgentStore]::Host
agentStoreName: &agentStoreName "idol-qms-agentstore"
# -- Default configuration for [PromotionAgentStore]::Port
agentStoreACIPort: &agentstoreACIPort "9150"

# -- Default configuration for [IDOL]::Host
queryserviceName: &queryServiceName "idol-query-service"
# -- Default configuration for [IDOL]::Port
queryserviceACIPort: &queryServiceACIPort "9100"

##### INGRESS VARIABLES #####

ingress:
  # -- Create ingress resource
  # @section -- Ingress
  enabled: true

  # -- Ingress controller type to setup for.
  # Valid values are nginx or haproxy (used by OpenShift)
  # @section -- Ingress
  type: nginx

  # -- Optional parameter to override the default ingress class
  # @section -- Ingress
  className: ""

  # -- Optional host (see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
  # For an OpenShift environment this is required (see https://docs.openshift.com/container-platform/4.11/networking/routes/route-configuration.html#nw-ingress-creating-a-route-via-an-ingress_route-configuration)
  # @section -- Ingress
  host: ""

  # -- Ingress controller path for ACI connections.
  # @section -- Ingress
  path: "/qms/"

  # -- Ingress controller path for service connections.
  # @section -- Ingress
  servicePath: "/qms/service/"

  # -- Maximum allowed size of the client request body, defining
  # the maximum size of requests that can be made to IDOL components within the installation, e.g.
  # the amount of data sent in DREADDDATA index commands.
  # The value should be an nginx "size" value.
  # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size for the documentation of the
  # corresponding nginx configuration parameter.
  # @section -- Ingress
  proxyBodySize: 2048m

  # -- Ingress controller specific annotations
  # Some annotations are added automatically based on ingress.type and other values, but can 
  # be overridden/augmented here
  # e.g. https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations
  # @section -- Ingress
  annotations: {}

  # -- Whether ingress uses TLS. You must set an ingress host to use this. 
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/#tls 
  # @section -- Ingress
  tls:
    # -- The name of the secret for ingress TLS. Leave empty if not using TLS. 
    # If specified then either this secret must already exist, or crt and key values must be provided and secret will be created.. 
    # @section -- Ingress
    secretName: ""

    # -- Certificate data value to generate tls Secret (should be base64 encoded)
    # @section -- Ingress
    crt: ""

    # -- Private key data value to generate tls Secret (should be base64 encoded)
    # @section -- Ingress
    key: ""

##### INTERNAL VARIABLES #####
# name -- used to name deployment, service, ingress
name: "idol-qms"
# aciPort -- port service will serve ACI connections on
aciPort: "16000"
# servicePort -- port service will serve service connections on
servicePort: "16002"
# livenessProbe -- container livenessProbe settings
livenessProbe:
  initialDelaySeconds: 120

singleAgentstore:

  # -- whether to deploy the single-content sub-chart that uses an IDOL Agentstore
  #    configuration file and docker image.
  enabled: true

  # -- the config map to use for providing a qms-agentstore configuration.
  existingConfigMap: "idol-qms-agentstore-cfg"

  # -- Additional PodSpec Volume (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes)
  # N.B. QMS AgentStore creates required databases on startup via poststart script mount
  additionalVolumeMounts:
  - name: config-map
    mountPath: /qms-agentstore/poststart_scripts/qms-agentstore-poststart.sh
    subPath: qms-agentstore-poststart.sh
    
  idolImage:
    # -- overrides the default value for single-content.idolImage.repo ("content")
    #    to guarantee that we use an IDOL Agentstore docker image.
    repo: "qms-agentstore"

  # -- agentstore port service will serve ACI connections on
  aciPort: *agentstoreACIPort

  ingress:
    # -- the ingress controller path to access the agentstore query service with
    path: "/qms-agentstore/"
    # -- the ingress controller path to access the agentstore index service with
    indexPath: "/qms-agentstore-index/"

  # -- the agentstore engine's query service name
  queryserviceName: ""

  # -- the agentstore engine's query service ACI port
  queryserviceACIPort: *agentstoreACIPort

  # -- the agentstore engine's index service name
  indexserviceName: ""

  # -- used to name deployment, service, ingress
  name: *agentStoreName

  idol-licenseserver:
    # -- whether to deploy the idol-licenseserver sub-chart
    enabled: false


single-content:
  # -- whether to deploy the single-content sub-chart.
  enabled: true

  # -- content port service will serve ACI connections on
  aciPort: *queryServiceACIPort

  # -- the content engine's query service name
  queryserviceName: *queryServiceName

  # -- the content engine's query service ACI port
  queryserviceACIPort: *queryServiceACIPort

  idol-licenseserver:
    # -- whether to deploy the idol-licenseserver sub-chart
    enabled: false
