apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.contentName }}
  labels: {{- include "distributedidol.labels" . | nindent 4 }}
    app: {{ .Values.contentName }}
spec:
  ports:
  - port: {{ (index .Values.contentPorts 0).service | int }}
    targetPort: {{ (index .Values.contentPorts 0).container | int }}
    name: {{ (index .Values.contentPorts 0).name }}
    protocol: TCP
  - port: {{ (index .Values.contentPorts 1).service | int }}
    targetPort: {{ (index .Values.contentPorts 1).container | int }}
    name: {{ (index .Values.contentPorts 1).name }}
    protocol: TCP
  - port: {{ (index .Values.contentPorts 2).service | int }}
    targetPort: {{ (index .Values.contentPorts 2).container | int }}
    name: {{ (index .Values.contentPorts 2).name }}
    protocol: TCP
  clusterIP: None
  selector:
    app: {{ .Values.contentName }}
{{- range $i := untilStep 0 ( .Values.exposedContents | int ) 1 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.contentName }}-{{ $i }}
  labels: {{- include "distributedidol.labels" $ | nindent 4 }}
    app: {{ $.Values.contentName }}-{{ $i }}
spec:
  ports:
  - port: {{ (index $.Values.contentPorts 0).container | int }}
    targetPort: {{ (index $.Values.contentPorts 0).container | int }}
    name: {{ (index $.Values.contentPorts 0).name }}
    protocol: TCP
  - port: {{ (index $.Values.contentPorts 1).container | int }}
    targetPort: {{ (index $.Values.contentPorts 1).container | int }}
    name: {{ (index $.Values.contentPorts 1).name }}
    protocol: TCP
  - port: {{ (index $.Values.contentPorts 2).container | int }}
    targetPort: {{ (index $.Values.contentPorts 2).container | int }}
    name: {{ (index $.Values.contentPorts 2).name }}
    protocol: TCP
  clusterIP: None
  selector:
    statefulset.kubernetes.io/pod-name: {{ $.Values.contentName }}-{{ $i }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.contentName }}
  labels: {{- include "distributedidol.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.contentName | quote }}
{{- if .Values.setupMirrored }}
  replicas: {{ int .Values.initialContentEngineCount }}
{{- else }}
  replicas: {{ int .Values.initialContentEngineCount }}
{{- end }}
  selector:
    matchLabels:
      app: {{ .Values.contentName }}
  template:
    metadata:
      labels: {{- include "distributedidol.labels" . | nindent 8 }}
        app: {{ .Values.contentName }}
    spec:
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      terminationGracePeriodSeconds: 300
      containers:
      - name: {{ .Values.contentName }}
        image: {{ .Values.idolImageRegistry }}/{{ .Values.contentImage }}:{{ .Values.idolVersion }}
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/bash"
        args: 
        - "-c"
        - |
{{ tpl (.Files.Get "resources/content_startup.sh") . | indent 10 }}
        volumeMounts:
        - name: config-map
          mountPath: /etc/config/idol
        - name: index
          mountPath: /opt/idol/content/index
{{- if .Values.setupMirrored }}
        - name: archive-share
          mountPath: /opt/idol/archive
{{- end }}
        env:
        - name: IDOL_CONTENT_SERVICE_PORT_ACI_PORT
          # This doesn't seem to be set by our headless service
          value: {{ (index .Values.contentPorts 0).container | quote }}
        - name: IDOL_COMMAND_PARAMS
          value: "-idolcluster"
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - "-c"
              - |
{{ tpl (.Files.Get "resources/content_postStart.sh") . | indent 16 }}
          preStop:
            exec:
              command:
              - /bin/bash
              - "-c"
              - |
{{ tpl (.Files.Get "resources/content_preStop.sh") . | indent 16 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbePath }}
            port: {{ (index .Values.contentPorts 0).container | int }}
{{- template "distributedidol.deployment.standardLivenessProbe" }}
        ports:
        - containerPort: {{ (index .Values.contentPorts 0).container | int }}
          name: {{ (index .Values.contentPorts 0).name }}
          protocol: TCP
        - containerPort: {{ (index .Values.contentPorts 1).container | int }}
          name: {{ (index .Values.contentPorts 1).name }}
          protocol: TCP
        - containerPort: {{ (index .Values.contentPorts 2).container | int }}
          name: {{ (index .Values.contentPorts 2).name }}
          protocol: TCP
      volumes:
      - name: config-map
        configMap:
          name: idol-config
{{- if .Values.setupMirrored }}
      - name: archive-share
        persistentVolumeClaim:
          claimName: backup-archive-pvc
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: index
      labels: {{- include "distributedidol.labels" . | nindent 8 }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.contentStorageClass }}
      resources:
        requests:
          storage: {{ .Values.contentVolumeSize }}