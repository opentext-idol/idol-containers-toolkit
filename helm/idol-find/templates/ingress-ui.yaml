# BEGIN COPYRIGHT NOTICE
# (c) Copyright 2022 Micro Focus or one of its affiliates.
# END COPYRIGHT NOTICE

{{- /*
 nginx ingress needs path capture to achieve prefix type routing
*/}}
{{- $ingress := .Values.ingress }}
{{- $pathSuffix := "" }}
{{- $pathType := "Prefix" }}
{{- if eq $ingress.type "nginx" }}
{{- $pathSuffix = "(.*)"}}
{{- $pathType = "ImplementationSpecific" }}
{{- end }}

{{- $portSuffix := "" }}
{{- if $ingress.port }}
{{- $portSuffix = printf ":%d" ($ingress.port | int) }}
{{- end }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.findIngressName }}
  labels: {{- include "idol-library.labels" (dict "root" . "component" .Values) | nindent 4 }}
  annotations:
{{- if eq $ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-redirect-from: ~^(https?://[^:/]+)(:\d+)?(/.+)$
    nginx.ingress.kubernetes.io/proxy-redirect-to: {{ printf "$1%s/%s$3" $portSuffix .Values.findEndpointName }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ $ingress.proxyBodySize }}
{{- else if eq $ingress.type "haproxy" }}
    haproxy.router.openshift.io/rewrite-target: / 
    haproxy.router.openshift.io/proxy-body-size: {{ $ingress.proxyBodySize }}
{{- end }}
spec:
{{- if $ingress.className }}
  ingressClassName: {{ $ingress.className }}
{{- end }}
{{- if $ingress.tls.secretName }}
  tls:
  - hosts:
      - {{ $ingress.host | required "tls.secretName was specified but no host value supplied" }}
    secretName: {{ $ingress.tls.secretName }}
{{- end }}
  rules:
  - http:
      paths:
      - path: {{ printf "/%s/%s" .Values.findEndpointName $pathSuffix }}
        pathType: {{ $pathType }}
        backend:
          service:
            name: {{ .Values.findUIName }}
            port:
              name: {{ .Values.webappPortName }}
{{- if $ingress.host }}
    host: {{ $ingress.host }}
{{- end }}
{{ if $ingress.tls.secretName -}}
---
{{ include "idol-library.ingress.secret" (dict "tls" $ingress.tls) -}}
{{- end }}
